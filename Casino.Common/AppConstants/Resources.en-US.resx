<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AmountToWithdraw" xml:space="preserve">
    <value>Choose the amount to withdraw</value>
  </data>
  <data name="AmountWithdraw" xml:space="preserve">
    <value>{0:D}% ({0:D}🍀)</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back 🔙</value>
  </data>
  <data name="Balance" xml:space="preserve">
    <value>Balance 💰</value>
  </data>
  <data name="BalanceIsNotEnoughToWithdraw" xml:space="preserve">
    <value>Please choose another amount, you don't have enough on balance to withdraw ❗️</value>
  </data>
  <data name="BasketballGameButtonText" xml:space="preserve">
    <value>Basketball ⛹️</value>
  </data>
  <data name="BasketballWonResource" xml:space="preserve">
    <value>Hit 🏀
You won {0:D} {1:S}</value>
  </data>
  <data name="BowlingGameButtonText" xml:space="preserve">
    <value>Bowling 🎳</value>
  </data>
  <data name="Card" xml:space="preserve">
    <value>Credit card 💳</value>
  </data>
  <data name="CardDeposit" xml:space="preserve">
    <value>Card 💳</value>
  </data>
  <data name="ChangeDepositParametersButtonText" xml:space="preserve">
    <value>Parameter of the deposit ⚙️</value>
  </data>
  <data name="ChooseAction" xml:space="preserve">
    <value>Choose an action ⤵️</value>
  </data>
  <data name="ChooseDepositMethod" xml:space="preserve">
    <value>Choose a method to deposit ⤵️</value>
  </data>
  <data name="ChooseDepositParameters" xml:space="preserve">
    <value>Choose deposit parameters and create an invoice ⤵️</value>
  </data>
  <data name="ChooseGameMode" xml:space="preserve">
    <value>Choose play mode ⤵️</value>
  </data>
  <data name="ChooseYourBet" xml:space="preserve">
    <value>Choose your bet</value>
  </data>
  <data name="ConfirmWithdrawQuestion" xml:space="preserve">
    <value>Do you confitm the withdraw {0:D}🍀?</value>
  </data>
  <data name="CurrentDepositParameter" xml:space="preserve">
    <value>You want to deposit by card {0:D} {1:S}</value>
  </data>
  <data name="CurrentLanguage" xml:space="preserve">
    <value>Current language is: {0:S} {1:S}</value>
  </data>
  <data name="Darts" xml:space="preserve">
    <value>Darts 🎯</value>
  </data>
  <data name="DartsWon" xml:space="preserve">
    <value>Bull's eye 🥇
You won {0:D} {1:S}</value>
  </data>
  <data name="DatsLost" xml:space="preserve">
    <value>Miss 😟 Better luck next time</value>
  </data>
  <data name="DemoPlayButtonText" xml:space="preserve">
    <value>Play demo ♦️</value>
  </data>
  <data name="DemoPlayDarts" xml:space="preserve">
    <value>Play darts demo ♦️</value>
  </data>
  <data name="Deposit" xml:space="preserve">
    <value>Deposit 💸</value>
  </data>
  <data name="DepositBalance" xml:space="preserve">
    <value>Deposit money</value>
  </data>
  <data name="DepositButtonText" xml:space="preserve">
    <value>Deposit</value>
  </data>
  <data name="DepositInstruction" xml:space="preserve">
    <value>Instruction how to top up balance 📝</value>
  </data>
  <data name="DepositInvoice" xml:space="preserve">
    <value>Create invoice🧾</value>
  </data>
  <data name="Dice" xml:space="preserve">
    <value>Dice 🎲</value>
  </data>
  <data name="DiceLost" xml:space="preserve">
    <value>Bad luck 😢</value>
  </data>
  <data name="DiceWon" xml:space="preserve">
    <value>WIN 🏆
You won {0:D} {1:S}</value>
  </data>
  <data name="DoNotHaveEnoughMoneyToWithdraw" xml:space="preserve">
    <value>The balance must be more 100🍀to withdraw</value>
  </data>
  <data name="DotHaveEnoughMoneyDemoBalance" xml:space="preserve">
    <value>You don't have enough money to play 😟
Top up the balance and start playing real 💵</value>
  </data>
  <data name="DotHaveEnoughMoneyRealBalance" xml:space="preserve">
    <value>You don't have enough money to play 😟
Top up the balance 💵</value>
  </data>
  <data name="Football" xml:space="preserve">
    <value>Football ⚽️</value>
  </data>
  <data name="FootballWon" xml:space="preserve">
    <value>GOAL 🥅
You won {0:D} {1:S}</value>
  </data>
  <data name="GameRoundFailed" xml:space="preserve">
    <value>Game is failed ⚠️ Your balance is not changes. Please try again 🔂</value>
  </data>
  <data name="Games" xml:space="preserve">
    <value>Games 🎮</value>
  </data>
  <data name="GoodLuck" xml:space="preserve">
    <value>Good luck 🤞</value>
  </data>
  <data name="HitBowlingBallButtonText" xml:space="preserve">
    <value>Throw 🎳 </value>
  </data>
  <data name="HitFootBall" xml:space="preserve">
    <value>Hit ⚽️</value>
  </data>
  <data name="Menu" xml:space="preserve">
    <value>Menu 🎛</value>
  </data>
  <data name="MissedBall" xml:space="preserve">
    <value>Miss 😟</value>
  </data>
  <data name="MyBalance" xml:space="preserve">
    <value>Your balance is {0:F2} 🍀</value>
  </data>
  <data name="MyDemoBalance" xml:space="preserve">
    <value>Your demo balance is {0:D} ♦️</value>
  </data>
  <data name="MyWallet" xml:space="preserve">
    <value>2. Deposit to play</value>
  </data>
  <data name="PlayDiceDemo" xml:space="preserve">
    <value>Play dice demo ♦️</value>
  </data>
  <data name="PlayDiceReal" xml:space="preserve">
    <value>Play dice real 🍀</value>
  </data>
  <data name="PlayFootballDemo" xml:space="preserve">
    <value>Play football demo ♦️</value>
  </data>
  <data name="PlayFootballReal" xml:space="preserve">
    <value>Play football real 🍀</value>
  </data>
  <data name="RealPlayButtonText" xml:space="preserve">
    <value>Play real 🍀</value>
  </data>
  <data name="RealPlayDarts" xml:space="preserve">
    <value>Play darts real 🍀</value>
  </data>
  <data name="RussianRoulette" xml:space="preserve">
    <value>Russian roulette</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings ⚙️</value>
  </data>
  <data name="ShotStoryHowToDeposit" xml:space="preserve">
    <value>1. Top up your inner telegram wallet
2. Transfer as much as you like to wallet of the bot to play
1 TON = 100🍀
1 ETH = 150000🍀
1 BTC = 2044000🍀
130 RUB = 100🍀</value>
  </data>
  <data name="SomethingWrongTryAgain" xml:space="preserve">
    <value>Something wrong. Please try again 🔴⚠️</value>
  </data>
  <data name="ThrowBasketBallButtonText" xml:space="preserve">
    <value>Throw 🏀</value>
  </data>
  <data name="ThrowDart" xml:space="preserve">
    <value>Throw 🎯</value>
  </data>
  <data name="Ton" xml:space="preserve">
    <value>TON 💎</value>
  </data>
  <data name="Wallet" xml:space="preserve">
    <value>1. Your telegram wallet</value>
  </data>
  <data name="WithdrawBalance" xml:space="preserve">
    <value>Withdraw money 💸</value>
  </data>
  <data name="WithdrawSuccess" xml:space="preserve">
    <value>Your withdraw will be processed soon
You will be sent a message with confirmation ✅</value>
  </data>
  <data name="WonMessageResource" xml:space="preserve">
    <value>Win 🏆
You won {0:D} {1:S}</value>
  </data>
</root>